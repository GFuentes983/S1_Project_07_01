@charset "utf-8";

/*
   New Perspectives on HTML5 and CSS3, 7th Edition
   Tutorial 5
   Case Problem 1
   
   Author: Gabriel Fuentes  
   Date: 11.28.18     
   
   Filename: gp_layout.css

   This file contains the layout styles and media
   queries used with sample pages from the Golden
   Pulps website.

*/


/* Import Basic Design Styles Used on All Screens */

@import url("gp_designs.css");

/* Flex Layout Styles */
body {
    display: -webkit-display-flex;
    display: -ms-display-flex;
    display: -moz-display-flex;
    display: flex;
    -webkit-flex-flow: row wrap;
    -ms-flex-flow: row wrap;
    -moz-flex-flow: row wrap;
    flex-flow: row wrap;
}

section#sheet {
    -webkit-flex: 3 1 301px;
    -ms-flex: 3 1 301px;
    -moz-flex: 3 1 301px;
    flex: 3 1 301px;
}

article {
    -webkit-flex: 1 3 180px;
    -ms-flex: 1 3 180px;
    -moz-flex: 1 3 180px;
    flex: 1 3 180px;
}
/* This is made to create flex-foxes which allow for the boxes in which the content is spaced to grow and shrink based on the width of the viewport. This sets it so it has full browser support and will wrap to the next row. This sets the shrink and growth rate for the id of sheet and article elements so they grow and shrink at different rates so they stand apart from other elements.   */
/* ============================================
	Mobile Devices: 0 - 480 pixels
   ============================================
*/
@media only screen and (max-width: 480px) {
    #sheet {
        width: 100%;
    }

    .horizontal {
        -webkit-order: 99;
        -ms-order: 99;
        -moz-order: 99;
        order: 99;
    }

    body>footer {
        -webkit-order: 100;
        -ms-order: 100;
        -moz-order: 100;
        order: 100;
    }
}
/* This is a media query which uses the style rules inside of it when the width of the viewport is less than 480 pixels, so when its under that range it will set the width for the id of sheet to 100% and change the order of the footer that is a direct child of the body to be above the horizontal class for nav. */
/* ===================================================
	Tablet and Desktop Devices: Greater than 480 pixels
   ===================================================
*/
@media only screen and (min-width: 481px) {
    .horizontal ul {
        display: flex;
        width: 100%;
        -webkit-flex-flow: nowrap;
        -ms-flex-flow: nowrap;
        -moz-flex-flow: nowrap;
        flex-flow: nowrap;
        height: 40px;
    }

    .horizontal ul li {
        -webkit-flex: 1 1 auto;
        -ms-flex: 1 1 auto;
        -moz-flex: 1 1 auto;
        flex: 1 1 auto;
    }

    .size1 {
        width: 100%;
    }

    .size2 {
        width: 60%;
    }
    .size3 {
        width: 40%;
    }
    .size4 {
        width: 30%;
    }
}
/* This is another media query for any range above 481 pixels to also use the style rules of setting the unordered list elements in the horizontal class to use flex boxes and not have it wrap as the width is set to 100%. The height is also set to have it as 40 pixels. It also changes the shrink and growth rates of the list items within the unordered list within the class of horizontal. This also changes the width for each class of size to a certain percent. */